{"version":3,"sources":["components/store.js","components/demo.js","components/login.js","components/signup.js","components/home.js","App.js","serviceWorker.js","index.js"],"names":["Store","className","src","type","min","max","value","id","class","React","Component","Demo","playMe","e","songid","target","split","document","getElementById","play","stopMe","pause","cards","getElementsByClassName","Array","prototype","forEach","call","card","addEventListener","Fragment","Login","placeholder","Signup","Home","to","path","exact","component","App","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b3db88d2.chunk.js","sourcesContent":["import React,{Component} from 'react';\nimport '../styles/store.css';\n\nclass Store extends React.Component {\n    render() {\n      return (\n        <div className=\"store\">\n            \n            <div className=\"children\">\n                <img src=\"beatles.jpg\" className=\"album-cover\"></img>\n                <div className=\"song-title\">\n                    Yesterday\n                </div>           \n                <div className=\"song-artist\">\n                    The Beatles \n                </div>     \n                <div className=\"slidecontainer\">\n                    <input type=\"range\" min=\"1\" max=\"100\" value=\"40\" className=\"slider\" id=\"myRange\" />\n                </div>\n\n                <div className=\"controllers\">\n                    <div className=\"previous control-btn\">\n                        <span><i class=\"fa fa-fast-backward\"></i></span>\n                    </div>\n                    <div className=\"play control-btn play\">\n                        <span><i class=\"fa fa-play\"></i></span>\n                    </div>\n                    <div className=\"next control-btn\">\n                        <span><i class=\"fa fa-fast-forward\"></i></span>\n                    </div>\n                </div>\n\n            </div>      \n        </div>\n      )\n    }\n}\n\nexport default Store;","import React, {Component} from 'react';\n\nexport default class Demo extends Component {\n\n    playMe = (e) =>{\n        let songid = e.target.src.split(\"img/\")[1].split(\".\")[0]\n        document.getElementById(songid).play()\n    }\n\n    stopMe = (e) =>{\n        let songid = e.target.src.split(\"img/\")[1].split(\".\")[0]\n        document.getElementById(songid).pause()\n    }\n\n    componentDidMount(){\n        let cards = document.getElementsByClassName(\"cards\")\n        Array.prototype.forEach.call(cards, card=>{\n            card.addEventListener(\"mouseover\", this.playMe)\n            card.addEventListener(\"mouseleave\", this.stopMe)\n        })\n    }\n\n    render(){\n        return (\n            <React.Fragment>\n                <img src=\"img/sabin.jpg\" className=\"cards\"></img>\n                <img src=\"img/bartika.jpeg\" className=\"cards\"></img>\n                <img src=\"img/albatross.jpg\" className=\"cards\"></img>\n                <img src=\"img/ngopal.jpg\" className=\"cards\"></img>\n                <img src=\"img/galbandi.jpg\" className=\"cards\"></img>                                \n                <img src=\"img/hamiteenvai.jpg\" className=\"cards\"></img>\n\n                <audio src=\"audio/sabin.mp3\" id=\"sabin\"></audio>\n                <audio src=\"audio/bartika.mp3\" id=\"bartika\"></audio>\n                <audio src=\"audio/albatross.mp3\" id=\"albatross\"></audio>\n                <audio src=\"audio/ngopal.mp3\" id=\"ngopal\"></audio>\n                <audio src=\"audio/galbandi.mp3\" id=\"galbandi\"></audio>\n                <audio src=\"audio/hamiteenvai.mp3\" id=\"hamiteenvai\"></audio>\n            </React.Fragment>\n        )\n    }\n}","import React, { Component } from 'react';\nimport \"../styles/loginsignup.css\";\n\nexport default class Login extends Component {\n    render() {\n        return (\n            <div className=\"login container_box\">\n                <div className=\"social_account\"></div>\n                <input type=\"text\" placeholder=\"Email or phone number\"></input><br/>\n                <input type=\"password\" placeholder=\"Password\"></input><br/>                \n                <button className=\"action login_button\">Login</button><br/>\n                OR \n                <div className=\"social_account\">\n                    <button className=\"google social action\"> <span className=\"logo_container\"><img src=\"/img/google.svg\"></img></span><span className=\"social_name\">Login with Google</span></button>    \n                    <button className=\"facebook social action\"><span className=\"logo_container\"><img src=\"/img/facebook.svg\"></img></span><span className=\"social_name\">Login with Facebook</span></button>    \n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport \"../styles/loginsignup.css\";\n\nexport default class Signup extends Component {\n    render() {\n        return (\n            <div className=\"signup container_box\">                \n                <input type=\"text\" placeholder=\"Email or phone number\"></input><br/>\n                <input type=\"password\" placeholder=\"Password\"></input><br/>\n                <input type=\"password\" placeholder=\"Re-Enter Password\"></input><br/>\n                <button className=\"action signup_button\">Signup</button>\n                <br/>\n                Or \n                <div className=\"social_account\">\n                    <button className=\"google social action\"> <span className=\"logo_container\"><img src=\"/img/google.svg\"></img></span><span className=\"social_name\">Signup with Google</span></button>    \n                    <button className=\"facebook social action\"><span className=\"logo_container\"><img src=\"/img/facebook.svg\"></img></span><span className=\"social_name\">Signup with Facebook</span></button>    \n                </div>\n            </div>\n        )\n    }\n}\n","import React,{Component, ReactDOM } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link, \n  } from \"react-router-dom\";\n\n\nimport '../styles/home.css';\nimport Demo from './demo';\nimport Login from './login';\nimport Signup from './signup';\n\nclass Home extends React.Component {    \n \n    render() {    \n        \n      return (\n        <Router>\n            <Switch>\n                <div>\n                    <img src=\"img/background.jpg\" className=\"background\"></img>\n                    <div className=\"home\">\n\n                        <div className=\"navbar\">\n                            <div className=\"download_button button\">\n                                <Link to=\"/download\"><div>Download</div></Link>\n                            </div>\n                            \n                            <Route path={[\"/login\", \"/signup\", \"/download\"]}>\n                                    <Link exact to=\"/\"><h1 className=\"brand\"> सुसेली</h1></Link>\n                                    <Link to=\"/signup\">\n                                        <div className=\"signup_button button\">\n                                            <div>Signup</div>\n                                        </div>\n                                    </Link>\n                                    <Link to=\"/login\">\n                                        <div className=\"login_button button\">\n                                            <div>Login</div>\n                                        </div>\n                                    </Link>\n                            </Route>\n\n                            {/* <Route path=\"/download\">\n                                <Link exact to=\"/\"><h1 className=\"brand\"> सुसेली</h1></Link>\n                            </Route> */}\n\n                        </div>\n\n                        <div className=\"child left\">\n                            \n                            <Route exact path=\"/\">\n                                <h1 className=\"title\"> <Link exact to=\"/\">सुसेली</Link></h1>\n                                \n                                <div className=\"subtitle\">\n                                    Listen to your favorite music anytime, anywhere. \n                                </div>\n                            </Route>                            \n\n                            <Route exact path={[\"/login\", \"/signup\"]}>\n                                <div className=\"illustration\">\n                                    <img src=\"/img/muji.svg\"></img><br/>                                    \n                                    Be a part of Suseli. <br/>Fall in love with Nepali music and musicians.\n                                </div>\n                            </Route>\n\n                            <div className=\"panel\">\n                                <Route exact path=\"/\">                                                      \n                                    <Link to=\"/login\">\n                                        <div className=\"login_button button\">\n                                            <div>Login</div>\n                                        </div>\n                                    </Link>\n\n                                    <Link to=\"/signup\">\n                                    <div className=\"signup_button button\">\n                                        <div>Signup</div>\n                                    </div>\n                                    </Link>\n                                </Route>\n                                                            \n                            </div>\n                        </div>\n                        <div className=\"child right\">                                            \n                            <Route path=\"/login\" component={Login} />                                                \n                            <Route path=\"/signup\" component={Signup} />                        \n                            <Route exact path=\"/\" component={Demo} />                                                      \n                        </div>\n\n                        <Route path=\"/download\">\n                            <div className=\"development\">\n                                <img src=\"/img/dev.svg\"></img><br/>                                    \n                                Suseli app is under development. \n                            </div>                            \n                        </Route>\n                    </div>\n                </div>\n            </Switch>\n        </Router>\n      )\n    }\n}\n\n\n\nexport default Home;","import React from 'react';\nimport Title from './components/title';\nimport Store from \"./components/store\";\nimport Home from './components/home';\nimport './font-awesome/css/font-awesome.min.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link, \n} from \"react-router-dom\";\n\nimport './styles/App.css';\n\nfunction App() {\n  return (    \n    <Router>          \n      <Switch>        \n\n        <Route path=\"/store\">\n          <Store />\n        </Route>\n\n        <Route path=\"/\">\n          <Home />\n        </Route>\n\n      </Switch>\n\n      <span className=\"footer\">\n        <a href=\"https://saurabpathak.com.np\">© Saurav Pathak</a> \n      </span>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}